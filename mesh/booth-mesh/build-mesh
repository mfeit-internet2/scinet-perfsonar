#!/bin/sh
#
# Build the SCinet perfSONAR Booth-Up Mesh
#

# Stock CentOS is jq 1.5.

# Convert the booth list to address entries

jq --slurp '
  .[1] as $dnocs
  | .[0]
  | [
      .[]
      | {
          "address": "\($dnocs[.dnoc].name)-booth\(.booth)-\(.protocol)",
          "_meta": {
            "display-name" : "\(
              # Zero-pad the booth numbers so they sort numerically
              .booth as $booth
              | "0" * (4-($booth |length)) + $booth
              ) - \(.name)",
            "dnochost": $dnocs[.dnoc].name,
            "name": "booth-\(.booth)-\(.protocol)",
            "booth": .booth,
            "network": .network,
            "protocol": .protocol
          }
        }
    ]
  | map( { "\(._meta.name)": . } )
  | add
' \
    booths.json \
    dnocs.json \
    > booth-addresses.json


# Convert the DNOC list to address entries

jq '
  [
    .[]
    | {
        "address": .name,
        "_meta": {
          "name": .name,
          "dnochost": .name,
          "display-name": .display
        }
      }
    | { "\(._meta.name)": . }
  ]
  | add
' \
    dnocs.json \
    > dnoc-addresses.json


# Create groups for each DNOC

jq --slurp '
  [
    .[0] as $dnocs
    | .[1] as $addresses
    | $dnocs
    | .[]
    | (
        .name as $dnoc
        | {
            (.display): {
              "type": "disjoint",
              "unidirectional": true,
              "a-addresses": [ { "name": .name } ],
              "b-addresses": ( [
                $addresses 
                | .[]
                ###| select(.address == $dnoc)
                | select(.address | startswith("\($dnoc)-"))
                | { "name": (._meta.name) }
              ] )
            }
          }
       )
  ]
  | add
' \
    dnocs.json \
    booth-addresses.json \
    > groups.json



# Generate tasks for each group

jq '
  [
    to_entries
    | .[]
    | {
        "\(.key)": {
          "group": .key,
          "test": "booth-reachability",
          "schedule": "booth-reachability",
          "archives": [ "booth-reachability" ]
        }
      }
  ]
  | add
' \
    groups.json \
    > tasks.json
# Merge everything

jq --slurp '
  {
    "addresses": (reduce (.[0] + .[1]) as $item ({}; . * $item)),
    "groups": .[2],
    "tests": .[3],
    "schedules": .[4],
    "tasks": .[5],
    "archives": .[6]
  }
' \
    booth-addresses.json \
    dnoc-addresses.json \
    groups.json \
    tests.json \
    schedules.json \
    tasks.json \
    archives.json
